import { defineStore } from 'pinia';

interface File {
  id: string;
  identificationNumber: string;
  firstName: string;
  lastName: string;
  fileName: string;
  pages: number;
  autoGeneratedNumber: string;
  fileInput: File | null;
  pinned: boolean;
}

export const useFilesStore = defineStore('files', {
  state: () => ({
    files: [] as File[],
  }),
  actions: {
    addFile(file: File) {
      this.files.push(file);
    },
    editFile(id: string, updatedFile: Partial<File>) {
      const file = this.files.find(f => f.id === id);
      if (file) {
        Object.assign(file, updatedFile);
      }
    },
    deleteFile(id: string) {
      this.files = this.files.filter(file => file.id !== id);
    },
    togglePin(id: string) {
      const file = this.files.find(f => f.id === id);
      if (file) {
        file.pinned = !file.pinned;
      }
    },
  },
});
